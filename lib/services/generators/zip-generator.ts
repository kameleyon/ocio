import JSZip from 'jszip';
import { FileContent } from '../ai-service';
import { validateAllFiles } from './code-validator';

export async function generateProjectZip(
  projectName: string, 
  files: FileContent[],
  validateCode: boolean = true
): Promise<Blob> {
  try {
    // Optional validation step
    const filesToZip = validateCode 
      ? await validateAllFiles(files)
      : files;
    
    // Create a new zip file
    const zip = new JSZip();
    
    // Normalize the project name for use as a directory name
    const normalizedName = projectName.toLowerCase().replace(/\s+/g, '-').replace(/[^a-z0-9-]/g, '');
    
    // Add each file to the zip in the appropriate directory structure
    filesToZip.forEach(file => {
      // Make sure the path uses forward slashes
      const normalizedPath = file.path.replace(/\\/g, '/');
      zip.file(`${normalizedName}/${normalizedPath}`, file.content);
    });
    
    // Generate the zip file
    return await zip.generateAsync({ type: 'blob' });
  } catch (error) {
    console.error('Error generating project zip:', error);
    throw new Error(`Failed to generate zip file: ${error instanceof Error ? error.message : 'Unknown error'}`);
  }
}

export async function generateZipWithReadme(
  projectName: string,
  description: string,
  techStack: {
    frontend: string;
    backend: string;
    database: string;
  }
): Promise<Blob> {
  // Create minimal README and project files for download
  const normalizedName = projectName.toLowerCase().replace(/\s+/g, '-').replace(/[^a-z0-9-]/g, '');
  
  const files: FileContent[] = [
    {
      path: 'README.md',
      content: `# ${projectName}

## Description
${description}

## Tech Stack
- Frontend: ${techStack.frontend}
- Backend: ${techStack.backend}
- Database: ${techStack.database}

## Getting Started
1. Extract the zip file
2. Navigate to the project directory
3. Install dependencies:
   \`\`\`
   npm install
   \`\`\`
4. Start the development server:
   \`\`\`
   npm run dev
   \`\`\`

## Generated by OptimusCode.io
This project was automatically generated using AI through OptimusCode.io.
`
    },
    {
      path: 'package.json',
      content: `{
  "name": "${normalizedName}",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "npm run dev",
    "build": "npm run build",
    "start": "npm run start"
  }
}`
    },
    {
      path: '.env.example',
      content: `# Environment Variables
# Copy this file to .env and update with your values

# Database
DATABASE_URL=your_database_url_here

# Authentication
AUTH_SECRET=your_auth_secret_here

# API Keys
API_KEY=your_api_key_here
`
    }
  ];
  
  return generateProjectZip(projectName, files, false);
}
